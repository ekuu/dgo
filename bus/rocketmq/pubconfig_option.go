// Code generated by "gogen option -n pubConfig -p pub --lowercase --with-init"; DO NOT EDIT.

package rocketmq

import (
	"fmt"
	"github.com/ekuu/dgo/pb"
)

// newPub constructor
func newPub(_opts ...PubOption) *pubConfig {
	_p := new(pubConfig)

	_p.SetOptions(_opts...)

	_p.init()
	return _p
}

// PubOption option interface
type PubOption interface {
	apply(*pubConfig)
}

// PubOption option function
type pubOptionFunc func(*pubConfig)

func (f pubOptionFunc) apply(_p *pubConfig) {
	f(_p)
}

func (_p *pubConfig) SetOptions(_opts ...PubOption) *pubConfig {
	for _, _opt := range _opts {
		_opt.apply(_p)
	}
	return _p
}

func SkipPubOption() PubOption {
	return pubOptionFunc(func(_p *pubConfig) {
		return
	})
}

func WithPubOptions(o *pubOptions) PubOption {
	return pubOptionFunc(func(_p *pubConfig) {
		_p.SetOptions(o.opts...)
	})
}

// pubOptions options struct
type pubOptions struct {
	opts []PubOption
}

// NewPubOptions new options struct
func NewPubOptions() *pubOptions {
	return new(pubOptions)
}

func (_o *pubOptions) Options() []PubOption {
	return _o.opts
}

func (_o *pubOptions) Append(_opts ...PubOption) *pubOptions {
	_o.opts = append(_o.opts, _opts...)
	return _o
}

// GetMetadata getMetadata option of pubConfig
func (_o *pubOptions) GetMetadata(getMetadata func(e *pb.Event) Metadata) *pubOptions {
	_o.opts = append(_o.opts, WithPubGetMetadata(getMetadata))
	return _o
}

// WithPubGetMetadata getMetadata option of pubConfig
func WithPubGetMetadata(getMetadata func(e *pb.Event) Metadata) PubOption {
	return pubOptionFunc(func(_p *pubConfig) {
		_p.getMetadata = getMetadata
	})
}

func PrintPubOptions(packageName string) {
	opts := []string{
		"WithPubGetMetadata()",
	}
	if packageName == "" {
		fmt.Printf("opts := []PubOption{ \n")
		for _, v := range opts {
			fmt.Printf("	%s,\n", v)
		}
	} else {
		fmt.Printf("opts := []%s.PubOption{ \n", packageName)
		for _, v := range opts {
			fmt.Printf("	%s.%s,\n", packageName, v)
		}
	}
	fmt.Println("}")
}
